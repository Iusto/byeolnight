events { worker_connections 1024; }

http {
  upstream backend  { server app:8080; }
  upstream frontend { server frontend:80; }

  # 80: ACME 먼저, 나머지는 리다이렉트
  server {
    listen 80;
    server_name byeolnight.com www.byeolnight.com;

    # ✅ ACME challenge (필수)
    location ^~ /.well-known/acme-challenge/ {
      alias /var/www/certbot/.well-known/acme-challenge/;
      default_type "text/plain";
      try_files $uri =404;
    }

    # Route 53 헬스체크 등 필요한 엔드포인트가 있으면 여기에 추가

    # 그 외는 HTTPS로
    location / {
      return 301 https://$host$request_uri;
    }
  }

  # (선택) IP로 들어오는 헬스체크용 디폴트 서버
  server {
    listen 80 default_server;
    server_name _;
    location /api/health    { proxy_pass http://backend/api/health; }
    location /health        { return 200 'nginx-ok'; add_header Content-Type text/plain; }
    location /              { return 200 'health-ok'; add_header Content-Type text/plain; }
  }

  # 443: 메인 서버(하나만)
  server {
    listen 443 ssl;
    server_name byeolnight.com www.byeolnight.com;

    # ✅ 하나의 라인리지로 통일 (예: 원래의 /live/byeolnight.com 사용)
    ssl_certificate     /etc/letsencrypt/live/byeolnight.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/byeolnight.com/privkey.pem;

    # API
    location /api/ {
      proxy_pass http://backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # SEO 파일
    location ~* ^/(sitemap.*\.xml|robots\.txt|naver.*\.html)$ {
      proxy_pass http://backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket
    location /ws {
      proxy_pass http://backend;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_read_timeout 86400s;
    }

    # 보안
    location ~ /\.(env|git) { deny all; return 404; }

    # 프론트
    location / {
      proxy_pass http://frontend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}